@model SubmitReturnRequestModel
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.ReturnItems").Text);
    //page class
    Html.AppendPageCssClassParts("html-return-request-page");
}
<div class="page return-request-page">
    <div class="bs_title_black title_bg_grey bs_text_center bs_margin_b_mid">
        <h4>@Html.Raw(string.Format(T("ReturnRequests.Title").Text, Url.RouteUrl("OrderDetails", new { orderId = Model.OrderId }), Model.CustomOrderNumber))</h4>
    </div>    
    <div class="bs_return_all_data">
        @if (!string.IsNullOrEmpty(Model.Result))
        {
            <div class="result">
                @Model.Result
            </div>
        }
        else
        {
            <form asp-route="ReturnRequest" method="post">
                <div class="section">
                    <div class="bs_title">
                        <h4>@T("ReturnRequests.SelectProduct(s)")</h4>
                    </div>
                    <div class="table-wrapper">
                        <table class="data-table">
                            <colgroup>
                                <col />
                                <col width="1" />
                                <col width="1" />
                            </colgroup>
                            <thead>
                                <tr>
                                    <th class="product">
                                        @T("ReturnRequests.Products.Name")
                                    </th>
                                    <th class="unit-price">
                                        @T("ReturnRequests.Products.Price")
                                    </th>
                                    <th class="quantity">
                                        @T("ReturnRequests.Products.Quantity")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Items)
                                {
                                    <tr>
                                        <td class="product">
                                            <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">@item.ProductName</a>
                                            @if (!string.IsNullOrEmpty(item.AttributeInfo))
                                            {
                                                <div class="attributes">
                                                    @Html.Raw(item.AttributeInfo)
                                                </div>
                                            }
                                        </td>
                                        <td class="unit-price">
                                            @item.UnitPrice
                                        </td>
                                        <td class="quantity">
                                            <select name="quantity@(item.Id)">
                                                @for (var i = 0; i <= item.Quantity; i++)
                                                {
                                                    <option value="@(i)">@(i)</option>
                                                }
                                            </select>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="bs_return_box">
                    <div class="bs_return_icon">
                        <span class="linearicons-enter-left"></span>
                    </div>
                    <div class="bs_return_input_box">
                        <div class="bs_title">
                            <h4>@T("ReturnRequests.WhyReturning")</h4>
                        </div>
                        <div class="bs_return_input_all">
                            <div class="bs_input_field">
                                @{
                                    var reasonsSelectList = Model.AvailableReturnReasons.Select(x => new SelectListItem
                                    {
                                        Text = x.Name,
                                        Value = x.Id.ToString()
                                    }).ToList();
                                }
                                <label class="bs_text_label" asp-for="ReturnRequestReasonId"></label>
                                <div class="bs_input_area">
                                    <select asp-for="ReturnRequestReasonId" asp-items="@reasonsSelectList" class="return-reasons"></select>
                                </div>
                            </div>
                            <div class="bs_input_field">
                                @{
                                    var actionsSelectList = Model.AvailableReturnActions.Select(x => new SelectListItem
                                    {
                                        Text = x.Name,
                                        Value = x.Id.ToString()
                                    }).ToList();
                                }
                                <label class="bs_text_label" asp-for="ReturnRequestActionId"></label>
                                <div class="bs_input_area">
                                    <select asp-for="ReturnRequestActionId" asp-items="@actionsSelectList" class="return-actions"></select>
                                </div>
                            </div>
                            @if (Model.AllowFiles)
                            {
                                //register CSS and JS
                                Html.AddCssFileParts("~/lib_npm/fine-uploader/fine-uploader/fine-uploader.min.css");
                                Html.AddScriptParts(ResourceLocation.Footer, "~/lib_npm/fine-uploader/jquery.fine-uploader/jquery.fine-uploader.min.js");
                                var allowedFileExtensionsList = new List<string>();
                                //allowedFileExtensionsList.Add("jpg");
                                //allowedFileExtensionsList.Add("jpeg");
                                //allowedFileExtensionsList.Add("jpeg");
                                //ex. ['jpg', 'jpeg', 'jpeg', 'gif'] or []
                                var allowedFileExtensions = string.Join(", ", allowedFileExtensionsList.Select(x => "'" + x.Trim() + "'").ToList());
                                var controlId = Html.IdFor(model => model.UploadedFileGuid);
                                <div class="bs_input_field return-request-file">
                                    <label class="bs_text_label" asp-for="UploadedFileGuid"></label>
                                    <div class="bs_input_area">
                                        <input id="@(controlId)" name="@(controlId)" type="hidden" />
                                        @*fine uploader container*@
                                        <div id="@(controlId)uploader" class="uploadedfileinput"></div>
                                    </div>

                                    @*fine uploader template (keep it synchronized to \Content\fineuploader\templates\default.html)*@
                                    <script type="text/template" asp-location="Footer" id="@(controlId)-qq-template">
                                        <div class="qq-uploader-selector qq-uploader">
                                            <div class="qq-upload-drop-area-selector qq-upload-drop-area" qq-hide-dropzone>
                                                <span>@T("Common.FileUploader.DropFiles")</span>
                                            </div>
                                            <div class="qq-upload-button-selector qq-upload-button">
                                                <div>@T("Common.FileUploader.Upload")</div>
                                            </div>
                                            <span class="qq-drop-processing-selector qq-drop-processing">
                                                <span>@T("Common.FileUploader.Processing")</span>
                                                <span class="qq-drop-processing-spinner-selector qq-drop-processing-spinner"></span>
                                            </span>
                                            <ul class="qq-upload-list-selector qq-upload-list">
                                                <li>
                                                    <div class="qq-progress-bar-container-selector">
                                                        <div class="qq-progress-bar-selector qq-progress-bar"></div>
                                                    </div>
                                                    <span class="qq-upload-spinner-selector qq-upload-spinner"></span>
                                                    <span class="qq-edit-filename-icon-selector qq-edit-filename-icon"></span>
                                                    <span class="qq-upload-file-selector qq-upload-file"></span>
                                                    <input class="qq-edit-filename-selector qq-edit-filename" tabindex="0" type="text">
                                                    <span class="qq-upload-size-selector qq-upload-size"></span>
                                                    <a class="qq-upload-cancel-selector qq-upload-cancel" href="#">@T("Common.FileUploader.Cancel")</a>
                                                    <a class="qq-upload-retry-selector qq-upload-retry" href="#">@T("Common.FileUploader.Retry")</a>
                                                    <a class="qq-upload-delete-selector qq-upload-delete" href="#">@T("Common.FileUploader.Delete")</a>
                                                    <span class="qq-upload-status-text-selector qq-upload-status-text"></span>
                                                </li>
                                            </ul>
                                        </div>
                                    </script>
                                    <script asp-location="Footer">
                                        $(document).ready(function() {
                                            $("#@(controlId)uploader").fineUploader({
                                                request: {
                                                    endpoint: '@(Url.RouteUrl("UploadFileReturnRequest"))'
                                                },
                                                template: "@(controlId)-qq-template",
                                                multiple: false,
                                                validation: {
                                                    allowedExtensions: [@Html.Raw(allowedFileExtensions)]
                                                }
                                            }).on("complete",
                                                function(event, id, name, responseJSON, xhr) {
                                                    $("#@(controlId)").val(responseJSON.downloadGuid);

                                                    if (responseJSON.message) {
                                                        alert(responseJSON.message);
                                                    }
                                                });
                                        });
                                    </script>
                                </div>
                            }
                            <div class="bs_input_field">
                                <label class="bs_text_label" asp-for="Comments"></label>
                                <div class="bs_input_area">
                                    <textarea asp-for="Comments" placeholder="Comments" class="comment"></textarea>
                                </div>
                                <span asp-validation-for="Comments"></span>
                            </div>
                        </div>
                        <div class="buttons">
                            <button type="submit" name="submit-return-request" class="bs_secondary_button bs_font_weight_400 submit-return-request-button">
                                <span class="linearicons-return2"> </span>
                                @T("ReturnRequests.Submit")
                            </button>
                        </div>
                    </div>
                </div>
               
            </form>
        }
    </div>
</div>