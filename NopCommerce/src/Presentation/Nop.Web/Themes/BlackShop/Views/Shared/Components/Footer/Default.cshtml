@model FooterModel

@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Services.Configuration
@inject IWebHelper _webhelper
@inject IWorkContext workContext
@inject ISettingService settingService 
@{ 
    bool hideDesignedBynopCypher = false;
    hideDesignedBynopCypher = await settingService.GetSettingByKeyAsync<bool>("blackshopthemesettings.hideDesignedBynopCypher", false);
}
<div class="footer">
    <div class="footer-upper">
        <div class="bs_footer_subscribe_box">
            <div class="bs_footer_logo">
                @await Component.InvokeAsync("Logo")
            </div>
            <div class="bs_newsletter">
                <div class="bs_newsletter_title">
                    <h3>@T("Newsletter.Title")</h3>
                </div>
                @await Component.InvokeAsync("NewsletterBox")
            </div>
        </div>
        <div class="bs_footer_link">
            <div class="footer-block information">
                <div class="title">
                    <strong>@T("Footer.Information")</strong>
                </div>
                <ul class="list">
                    @if (Model.SitemapEnabled && Model.DisplaySitemapFooterItem)
                    {
                        <li>
                            <span class="linearicons-flip-vertical"></span>
                            <a href="@Url.RouteUrl("Sitemap")">@T("Sitemap")</a>
                        </li>
                    }
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                    {
                        <li>
                            <span class="linearicons-flip-vertical"></span>
                            <a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a>
                        </li>
                    }
                    @if (Model.DisplayContactUsFooterItem)
                    {
                        <li>
                            <span class="linearicons-flip-vertical"></span>
                            <a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a>
                        </li>
                    }
                </ul>
            </div>
            <div class="footer-block customer-service">
                <div class="title">
                    <strong>@T("Footer.CustomerService")</strong>
                </div>
                <ul class="list">
                    @if (Model.DisplayProductSearchFooterItem)
                    {
                        <li>
                            <span class="linearicons-flip-vertical"></span>
                            <a href="@Url.RouteUrl("ProductSearch")">@T("Search")</a>
                        </li>
                    }
                    @if (Model.NewsEnabled && Model.DisplayNewsFooterItem)
                    {
                        <li>
                            <span class="linearicons-flip-vertical"></span>
                            <a href="@Url.RouteUrl("NewsArchive")">@T("News")</a>
                        </li>
                    }
                    @if (Model.BlogEnabled && Model.DisplayBlogFooterItem)
                    {
                        <li>
                            <span class="linearicons-flip-vertical"></span>
                            <a href="@Url.RouteUrl("Blog")">@T("Blog")</a>
                        </li>
                    }
                    @if (Model.ForumEnabled && Model.DisplayForumsFooterItem)
                    {
                        <li>
                            <span class="linearicons-flip-vertical"></span>
                            <a href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a>
                        </li>
                    }
                    @if (Model.RecentlyViewedProductsEnabled && Model.DisplayRecentlyViewedProductsFooterItem)
                    {
                        <li>
                            <span class="linearicons-flip-vertical"></span>
                            <a href="@Url.RouteUrl("RecentlyViewedProducts")">@T("Products.RecentlyViewedProducts")</a>
                        </li>
                    }
                    @if (Model.CompareProductsEnabled && Model.DisplayCompareProductsFooterItem)
                    {
                        <li>
                            <span class="linearicons-flip-vertical"></span>
                            <a href="@Url.RouteUrl("CompareProducts")">@T("Products.Compare.List")</a>
                        </li>
                    }
                    @if (Model.NewProductsEnabled && Model.DisplayNewProductsFooterItem)
                    {
                        <li>
                            <span class="linearicons-flip-vertical"></span>
                            <a href="@Url.RouteUrl("NewProducts")">@T("Products.NewProducts")</a>
                        </li>
                    }
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList())
                    {
                        <li>
                            <span class="linearicons-flip-vertical"></span>
                            <a href="@Url.RouteUrl("Topic", new {SeName = topic.SeName})">@topic.Name</a>
                        </li>
                    }
                    @if (Model.AllowCustomersToCheckGiftCardBalance)
                    {
                        <li>
                            <span class="linearicons-flip-vertical"></span>
                            <a href="@Url.RouteUrl("CheckGiftCardBalance")">@T("CheckGiftCardBalance")</a>
                        </li>
                    }
                </ul>
            </div>
            <div class="footer-block my-account">
                <div class="title">
                    <strong>@T("Footer.MyAccount")</strong>
                </div>
                <ul class="list">
                    @if (Model.DisplayCustomerInfoFooterItem)
                    {
                        <li>
                            <span class="linearicons-flip-vertical"></span>
                            <a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a>
                        </li>
                    }
                    @if (Model.DisplayCustomerOrdersFooterItem)
                    {
                        <li>
                            <span class="linearicons-flip-vertical"></span>
                            <a href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a>
                        </li>
                    }
                    @if (Model.DisplayCustomerAddressesFooterItem)
                    {
                        <li>
                            <span class="linearicons-flip-vertical"></span>
                            <a href="@Url.RouteUrl("CustomerAddresses")">@T("Account.CustomerAddresses")</a>
                        </li>
                    }
                    @if (Model.ShoppingCartEnabled && Model.DisplayShoppingCartFooterItem)
                    {
                        <li>
                            <span class="linearicons-flip-vertical"></span>
                            <a href="@Url.RouteUrl("ShoppingCart")">@T("ShoppingCart")</a>
                        </li>
                    }
                    @if (Model.WishlistEnabled && Model.DisplayWishlistFooterItem)
                    {
                        <li>
                            <span class="linearicons-flip-vertical"></span>
                            <a href="@Url.RouteUrl("Wishlist")">@T("Wishlist")</a>
                        </li>
                    }
                    @if (Model.AllowCustomersToApplyForVendorAccount && Model.DisplayApplyVendorAccountFooterItem)
                    {
                        <li>
                            <span class="linearicons-flip-vertical"></span>
                            <a href="@Url.RouteUrl("ApplyVendorAccount")">@T("Vendors.ApplyAccount")</a>
                        </li>
                    }
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList())
                    {
                        <li>
                            <span class="linearicons-flip-vertical"></span>
                            <a href="@Url.RouteUrl("Topic", new {SeName = topic.SeName})">@topic.Name</a>
                        </li>
                    }
                </ul>
            </div>
            <div class="footer-block follow-us">
                <div class="social">
                    <div class="title">
                        <strong>@T("Footer.FollowUs")</strong>
                    </div>
                    @await Component.InvokeAsync("SocialButtons")
                </div>
            </div>
        </div>
    </div>
    <div class="footer-lower">
        <div>
            @if (!Model.HidePoweredByNopCommerce)
            {
                <div class="footer-powered-by">
                    @*Would you like to remove the "Powered by nopCommerce" link in the bottom of the footer?
                        Please find more info at https://www.nopcommerce.com/nopcommerce-copyright-removal-key*@
                    Powered by <a href="@(OfficialSite.Main)">nopCommerce</a>
                </div>
            }
            @await Component.InvokeAsync("StoreThemeSelector")
        </div>

        @if (!hideDesignedBynopCypher)
        {
            <div class="designby_nopcypher">
                <p>
                    Designed with <svg version="1.1" id="Capa_1" xmlns:x="&ns_extend;" xmlns:i="&ns_ai;" xmlns:graph="&ns_graphs;"
                                       xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 512 512"
                                       style="enable-background:new 0 0 512 512;" xml:space="preserve">
                    <style type="text/css">
                        .st0 {
                            fill: #f00;
                        }
                    </style>

                    <g>
                    <path class="st0" d="M376,30c-27.8,0-53.3,8.8-75.7,26.2C278.8,72.8,264.4,94,256,109.4c-8.4-15.4-22.8-36.6-44.3-53.3
			    C189.3,38.8,163.8,30,136,30C58.5,30,0,93.4,0,177.5c0,90.9,72.9,153,183.4,247.1c18.8,16,40,34.1,62.1,53.4c2.9,2.5,6.7,4,10.5,4
			    s7.6-1.4,10.5-4c22.1-19.3,43.3-37.4,62.1-53.4C439.1,330.5,512,268.4,512,177.5C512,93.4,453.5,30,376,30z" />

                </g>
                </svg>
                    by <a href="https://nopcypher.com?utm_medium=theme&utm_campaign=live-store&utm_source=@_webhelper.GetStoreLocation()" target="_blank">nopCypher</a>
                </p>
            </div>
        }
        <div class="footer-info">
            <span class="footer-disclaimer">@T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)</span>
            @if (Model.DisplayTaxShippingInfoFooter)
            {
                var inclTax = await workContext.GetTaxDisplayTypeAsync() == TaxDisplayType.IncludingTax;
                <span class="footer-tax-shipping">
                    @T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = await Html.GetTopicSeNameAsync("shippinginfo") }))
                </span>
            }
        </div>

    </div>
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.Footer })
</div>
<script asp-location="Footer">
    $(document).ready(function () {
        $('.footer-block .title').on('click', function () {
            var e = window, a = 'inner';
            if (!('innerWidth' in window)) {
                a = 'client';
                e = document.documentElement || document.body;
            }
            var result = { width: e[a + 'Width'], height: e[a + 'Height'] };
            if (result.width < 769) {
                $(this).siblings('.list').slideToggle('slow');
            }
        });
    });
</script>
<script asp-location="Footer">
    $(document).ready(function () {
        $('.block .title').on('click', function () {
            var e = window, a = 'inner';
            if (!('innerWidth' in window)) {
                a = 'client';
                e = document.documentElement || document.body;
            }
            var result = { width: e[a + 'Width'], height: e[a + 'Height'] };
            if (result.width < 1001) {
                $(this).siblings('.listbox').slideToggle('slow');
            }
        });
    });
</script>